package eu.wuttke.nrf.ui.component;

import java.util.Collection;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItem;
import com.vaadin.event.ItemClickEvent.ItemClickListener;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import eu.wuttke.nrf.domain.misc.ObjectUtil;
import eu.wuttke.nrf.ui.view.SearchView;

public class SearchListComposite<E> extends CustomComponent implements SearchView<E> {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private Table tableSearchResult;

	@AutoGenerated
	private HorizontalLayout horizontalLayoutHeader;

	@AutoGenerated
	private Button btnSearch;

	@AutoGenerated
	private TextField tfSearch;

	@AutoGenerated
	private Label lblSearch;

	private BeanContainer<Long, E> container;
	private Class<? super E> entityClass;

	public SearchListComposite(Class<? super E> entityClass) {
		this.entityClass = entityClass;
		
		buildMainLayout();
		setCompositionRoot(mainLayout);

		tableSearchResult.setSelectable(true);
		tableSearchResult.setImmediate(true);
	}
	
	@Override
	public void displaySearchResult(Collection<? extends E> entities) {
		container = new BeanContainer<Long, E>(entityClass);
		container.setBeanIdProperty(ObjectUtil.getIdPropertyName(entityClass));
		container.addAll(entities);
		tableSearchResult.setContainerDataSource(container);
		initTable();
	}
	
	@Override
	public void addSearchButtonClickListener(ClickListener listener) {
		btnSearch.addClickListener(listener);
	}
	
	@Override
	public void addTableItemClickListener(ItemClickListener listener) {
		tableSearchResult.addItemClickListener(listener);
	}

	@Override
	public void addTableValueChangedListener(ValueChangeListener listener) {
		tableSearchResult.addValueChangeListener(listener);
	}
	
	@Override
	public String getSearchQuery() {
		return tfSearch.getValue();
	}
	
	@Override
	public E getSelectedEntity() {
		if (tableSearchResult.getValue() != null) {
			BeanItem<E> beanItem = container.getItem(tableSearchResult.getValue());
			return beanItem != null ? beanItem.getBean() : null;
		} else
			return null;
	}

	protected Table getTable() {
		return tableSearchResult;
	}
	
	protected void initTable() {
		//table.setVisibleColumns(visibleColumns);
		//table.setColumnHeaders(columnHeaders);
	}

	private static final long serialVersionUID = 1L;
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// horizontalLayoutHeader
		horizontalLayoutHeader = buildHorizontalLayoutHeader();
		mainLayout.addComponent(horizontalLayoutHeader);
		
		// tableSearchResult
		tableSearchResult = new Table();
		tableSearchResult.setImmediate(false);
		tableSearchResult.setWidth("100.0%");
		tableSearchResult.setHeight("100.0%");
		mainLayout.addComponent(tableSearchResult);
		mainLayout.setExpandRatio(tableSearchResult, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayoutHeader() {
		// common part: create layout
		horizontalLayoutHeader = new HorizontalLayout();
		horizontalLayoutHeader.setImmediate(false);
		horizontalLayoutHeader.setWidth("100.0%");
		horizontalLayoutHeader.setHeight("-1px");
		horizontalLayoutHeader.setMargin(false);
		horizontalLayoutHeader.setSpacing(true);
		
		// lblSearch
		lblSearch = new Label();
		lblSearch.setImmediate(false);
		lblSearch.setWidth("-1px");
		lblSearch.setHeight("-1px");
		lblSearch.setValue("Search");
		horizontalLayoutHeader.addComponent(lblSearch);
		horizontalLayoutHeader.setComponentAlignment(lblSearch, new Alignment(
				33));
		
		// tfSearch
		tfSearch = new TextField();
		tfSearch.setImmediate(false);
		tfSearch.setWidth("100.0%");
		tfSearch.setHeight("-1px");
		horizontalLayoutHeader.addComponent(tfSearch);
		horizontalLayoutHeader.setExpandRatio(tfSearch, 1.0f);
		
		// btnSearch
		btnSearch = new Button();
		btnSearch.setCaption("Search");
		btnSearch.setImmediate(true);
		btnSearch.setWidth("-1px");
		btnSearch.setHeight("-1px");
		horizontalLayoutHeader.addComponent(btnSearch);
		horizontalLayoutHeader.setComponentAlignment(btnSearch, new Alignment(
				34));
		
		return horizontalLayoutHeader;
	}

}
